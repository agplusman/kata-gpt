Candidate Architecture Characteristics:
Instructions:
Identify no more than 7 driving characteristics. Pick the top 3 characteristics (in any order). Implicit characteristics can become driving characteristics (but NOT top 3) if they are critical concerns. Add additional characteristics identified that werenâ€™t deemed as important as the list of 7 to the Others Considered list. Please label Implicit Characteristics (Implicit). 
Different sets of characteristics tailored to similar behavior scopes in quantum components may result in the identification of multiple characteristic sets.

The following characteristics are related; some systems only need one of these, other systems may need both. Mention BOTH characteristics where applicable:
- performance and responsiveness
- availability and fault tolerance
- scalability and elasticity
- data integrity and data consistency
- adaptability and extensibility
The following characteristics are unrelated:
- deployability
- testability
- abstraction
- workflow
- configurability
- interoperability
- concurrency
- recoverability

Reference Definitions:
Performance - The amount of time it takes for the system to process a business request 
Responsiveness - The amount of time it takes to get a response to the user
Availability - The amount of uptime of a system; usually measured in 9's (e.g., 99.9%)
Fault tolerance - When fatal errors occur, other parts of the system continue to function
Scalability - A function of system capacity and growth over time; as the number of users or requests increase in the system, responsiveness, performance, and error rates remain constant 
Elasticity - The system is able to expand and respond quickly to unexpected or anticipated extreme loads (e.g., going from 20 to 250,000 users instantly)
Data integrity - The data across the system is correct and there is no data loss in the system
Data consistency - The data across the system is in sync and consistent across databases and tables
Adaptability - The ease in which a system can adapt to changes in environment and functionality
Extensibility - The ease in which a system can be extended with additional features and functionality
Deployability - The amount of ceremony involved with releasing the software, the frequency in which releases occur, and the overall risk of deployment
Testability - The ease of and completeness of testing
Abstraction - The level at which parts of the system are isolated from other parts of the system (both internal and external system interactions)
Workflow - The ability of the system to manage complex workflows that require multiple parts (services) of the system to complete a business request
Configurability - The ability of the system to support multiple configurations, as well as support custom on-demand configurations and configuration updates
Interoperability - The ability of the system to interface and interact with other systems to complete a business request
Concurrency - The ability of the system to process simultaneous requests, in most cases in the same order in which they were received; implied when scalability and elasticity are supported 
Recoverability - The ability of the system to start where it left off in the event of a system crash
Evolvability - evolvability is a meta-characteristic, an architectural wrapper that protects all the other architectural characteristics. The ability of a system to adapt and evolve over time in response to changing conditions, requirements, or technologies. A system designed for evolvability is typically easier to maintain, extend, and modify.

Implicit Characteristics:
Feasibility (implicit) - Taking into account timeframes, budgets, and developer skills when making architectural choices; tight timeframes and budgets make this a driving architectural characteristic
Security (implicit) - The ability of the system to restrict access to sensitive information or functionality
Maintainability (implicit) - The level of effort required to locate and apply changes to the system
Observability (implicit) - The ability of a system or a service to make available and stream metrics such as overall health, uptime, response times, performance, etc. 

Business Requirements Translations:
Mergers and acquisitions - Interoperability, scalability, adaptability, extensibility
Time to market - Agility, testability, deployability
User satisfaction - Performance, availability, fault tolerance, testability, deployability, agility, security
Competitive advantage - Agility, testability, deployability, scalability, availability, fault tolerance
Time and budget - Simplicity, feasibility
